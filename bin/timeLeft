#!/usr/bin/python
import sys
import myutils
import time

logfile = ''
app = ''
with open('system/controlDict','r') as f:
    for line in f:
	if line.strip().startswith('application'):
	    app = line.split()[1].split(';')[0]
        elif line.strip().startswith('deltaT'): 
            dt = float(line.split()[1][:-1])
        elif line.strip().startswith('endTime'): 
            tEnd = float(line.split()[1][:-1])

if len(sys.argv) <= 1:
    if app: logfile = app+'.out'
else:
    logfile = sys.argv[1]

nsteps = 0
startTime = -1
try:
    with open(logfile,'r') as f:
        for line in f:
            if line.startswith('Create mesh'):
                startTime = float(line.split()[-1])
                if startTime > 0: print 'Detected restart from t =',startTime
            elif line.startswith('Time ='):
                simTime = float(line.split()[2])
                nsteps += 1
            elif line.startswith('ExecutionTime ='):
                clockTime = float(line.split()[6])
except IOError:
    sys.exit('USAGE: '+sys.argv[0]+' log_file')

print 'Simulation is at t =',simTime, \
    'ending at', tEnd, \
    '(%.1f%% complete)' % (100*simTime/tEnd)
print app,'has been running for',nsteps,'steps'
print 'Elapsed time:',myutils.smartTime(clockTime)
#print 'Remaining time:',myutils.smartTime((tEnd-simTime)/simTime*clockTime)

remainingTime = (tEnd-simTime)/(simTime-startTime)*clockTime
print 'Remaining time:',myutils.smartTime(remainingTime)

print 'ESTIMATED TOTAL TIME:',myutils.smartTime(clockTime+remainingTime)

print time.strftime('Current date/time is %x %X')
